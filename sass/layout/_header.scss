/*---------------------------------*/
/* ------- Header elements --------*/
/*---------------------------------*/

.header{
    position: relative;
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.801), rgba($color-primary-dark, 0.801)) , url(../img/hero-small.jpg);
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    /* The various numbers above represents the coordinates of the four corners of a polygon that is cut out */
    /*The clip-path CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.*/
    /* https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path */
    /* https://bennettfeely.com/clippy/ --> free transformation tool that gives coordinates */

    /* The & comes in handy when youâ€™re nesting and you want to create a more specific selector, like an element that has *both* of two classes
     https://css-tricks.com/the-sass-ampersand/ */

    @media (min-resolution: 192dpi) and (min-width: 37.5em),  (min-width: 125em){ //media query to target resolution. Min resolution fo 192dpi is the resolution of apple retina displayh.
        background-image: linear-gradient(to right bottom, rgba($color-secondary-light, 0.801), rgba($color-primary-dark, 0.801)) , url(../img/hero.jpg);
    }

    @include respond(phone){
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    &__logo-box{
        position: absolute;
        left: 4rem;
        top: 4rem;
    }

    &__logo{
        height: 3.5rem;
    }

    &__text-box{
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%,-50%);
        text-align: center;
    }

}
