@charset "UTF-8";
/* ------- Universal elements --------*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

html {
  font-size: 10px;
  /*we choose 10px because 10px is equivalent to 1rem*/
}

body {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /*border box removes the padding, border and margin from the width/height of the box model */
}

/*-------------------------*/
/*-------Animations--------*/
/*-------------------------*/
@-webkit-keyframes moveInLeft {
  0% {
    /*start*/
    opacity: 0;
    -webkit-transform: translateX(-10rem);
            transform: translateX(-10rem);
  }
  80% {
    -webkit-transform: translateX(1rem);
            transform: translateX(1rem);
  }
  100% {
    /*finish*/
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}
@keyframes moveInLeft {
  0% {
    /*start*/
    opacity: 0;
    -webkit-transform: translateX(-10rem);
            transform: translateX(-10rem);
  }
  80% {
    -webkit-transform: translateX(1rem);
            transform: translateX(1rem);
  }
  100% {
    /*finish*/
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

/*The @keyframes rule specifies the animation code.

The animation is created by gradually changing from one set of CSS styles to another.

During the animation, you can change the set of CSS styles many times.*/
@-webkit-keyframes moveInRight {
  0% {
    /*start*/
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
            transform: translateX(-1rem);
  }
  100% {
    /*finish*/
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}
@keyframes moveInRight {
  0% {
    /*start*/
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
            transform: translateX(-1rem);
  }
  100% {
    /*finish*/
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

/*The @keyframes rule specifies the animation code.

The animation is created by gradually changing from one set of CSS styles to another.

During the animation, you can change the set of CSS styles many times.*/
@-webkit-keyframes moveInBottom {
  0% {
    /*start*/
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem);
  }
  80% {
    -webkit-transform: translateY(-1rem);
            transform: translateY(-1rem);
  }
  100% {
    /*finish*/
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}
@keyframes moveInBottom {
  0% {
    /*start*/
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem);
  }
  80% {
    -webkit-transform: translateY(-1rem);
            transform: translateY(-1rem);
  }
  100% {
    /*finish*/
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

/*The @keyframes rule specifies the animation code.

The animation is created by gradually changing from one set of CSS styles to another.

During the animation, you can change the set of CSS styles many times.*/
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  /*used to determine whether back part of the element is hidden or visible for the user*/
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  -webkit-animation-name: moveInLeft;
          animation-name: moveInLeft;
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-timing-function: ease-out;
          animation-timing-function: ease-out;
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.7rem;
  -webkit-animation: moveInRight 1s ease-out;
          animation: moveInRight 1s ease-out;
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: -webkit-gradient(linear, left top, right top, from(#7ed56f), to(#28b485));
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
}

.heading-secondary:hover {
  -webkit-transform: skewY(2deg) skewX(15deg) scale(1.1);
          transform: skewY(2deg) skewX(15deg) scale(1.1);
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
}

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: 1.6rem;
}

.paragraph:not(:last-child) {
  margin-bottom: 3rem;
}

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  /* Everything related to font goes into the body section. This is good code practice instead of placing it in the universal element sections */
}

.u-center-text {
  text-align: center;
}

.u-margin-bottom-big {
  margin-bottom: 8rem;
}

.u-margin-bottom-med {
  margin-bottom: 4rem;
}

.u-margin-bottom-small {
  margin-bottom: 1.5rem;
}

/*-------------------------*/
/* ------- Buttons --------*/
/*-------------------------*/
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  position: relative;
  /*required for the absolute positioning on the after pseudo element to work*/
  font-size: 1.6rem;
}

.btn:hover {
  -webkit-transform: translateY(-3px);
          transform: translateY(-3px);
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /*https://www.w3schools.com/cssref/css3_pr_box-shadow.asp*/
}

.btn:hover::after {
  -webkit-transform: scaleX(1.4) scaleY(1.6);
          transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn:active {
  /*activated when you click it*/
  -webkit-transform: translateY(-1px);
          transform: translateY(-1px);
  -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--animated {
  -webkit-animation: moveInBottom .5s ease-out .75s;
          animation: moveInBottom .5s ease-out .75s;
  /*last value is the delay value*/
  -webkit-animation-fill-mode: backwards;
          animation-fill-mode: backwards;
  /*The animation-fill-mode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).*/
  /*automatically applies the values at 0% before hte animation starts --The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period*/
  /*https://www.w3schools.com/cssref/css3_pr_animation-fill-mode.asp*/
}

.btn::after {
  /*https://developer.mozilla.org/en-US/docs/Web/CSS/::after*/
  /*properties of the after pseudo-element must be the same as the original element*/
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  /*necessary to place this pseudo element behind the actual button*/
  top: 0;
  left: 0;
  z-index: -1;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn--white::after {
  background-color: #fff;
}

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: solid 1px #55c57a;
  padding: 3px;
  font-size: 1.6rem;
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
}

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  -webkit-transform: translateY(-2px);
          transform: translateY(-2px);
}

.btn-text:active {
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  -webkit-transform: translateY(0px);
          transform: translateY(0px);
}

/*---------------------------------*/
/* ------- Header elements --------*/
/*---------------------------------*/
.header {
  position: relative;
  height: 95vh;
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(126, 213, 111, 0.801)), to(rgba(40, 180, 133, 0.801))), url(../img/hero.jpg);
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.801), rgba(40, 180, 133, 0.801)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* The various numbers above represents the coordinates of the four corners of a polygon that is cut out */
  /*The clip-path CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.*/
  /* https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path */
  /* https://bennettfeely.com/clippy/ --> free transformation tool that gives coordinates */
  /* The & comes in handy when youâ€™re nesting and you want to create a more specific selector, like an element that has *both* of two classes
     https://css-tricks.com/the-sass-ampersand/ */
}

.header__logo-box {
  position: absolute;
  left: 4rem;
  top: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  text-align: center;
}

.row {
  max-width: 114rem;
  background-color: #eeeeee;
  margin: 0 auto;
}

.row:not(:last-child) {
  margin-bottom: 6rem;
}

.row::after {
  content: "";
  display: table;
  clear: both;
}

.row [class^="col-"] {
  float: left;
}

.row [class^="col-"]:not(:last-child) {
  margin-right: 6rem;
}

.row .col-1-of-2 {
  width: calc((100% - 6rem)/2);
}

.row .col-1-of-3 {
  width: calc((100% - 6rem*2)/3);
}

.row .col-2-of-3 {
  width: calc(2*((100% - 2* 6rem)/3) + 6rem);
}

.row .col-1-of-4 {
  width: calc((100% - 6rem*3)/4);
}

.row .col-2-of-4 {
  width: calc(2*((100% - 3 * 6rem)/4) + 6rem);
}

.row .col-3-of-4 {
  width: calc(3*((100% - 3 * 6rem)/4) + 2*6rem);
}

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
}
/*# sourceMappingURL=main.css.map */